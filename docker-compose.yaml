version: "3"

services:
    web:
        build:
            context: .
            dockerfile: Dockerfile
        entrypoint: ["./cmd", "server", "--config", "convoy.json"]
        container_name: convoy
        ports:
            - 5005:5005
        volumes:
            - ./convoy-docker.json:/convoy-docker.json
        restart: on-failure
        depends_on:
            - mongodb
            - redis_server

    mongodb:
        image: mongo:latest
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: rootpassword
        volumes:
            - ./data/mongo:/data/db
        restart: on-failure           
        ports:
           - "27017:27017"

    redis_server:
        image: redis:alpine
        ports:
            - "8379:6379"

    prometheus:
        image: prom/prometheus:v2.24.0
        volumes:
          - ./prometheus/:/etc/prometheus/
          - prometheus_data:/prometheus
        command:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
          - 9090:9090
        restart: always
    
    grafana:
      image: grafana/grafana:latest
      container_name: grafana
      volumes:
        - grafana_data:/var/lib/grafana
        - ./grafana/provisioning:/etc/grafana/provisioning
      environment:
        - GF_AUTH_DISABLE_LOGIN_FORM=false
        - GF_AUTH_ANONYMOUS_ENABLED=false
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      ports:
        - 3000:3000

volumes:
  grafana_data:
  prometheus_data: